<?php


define('__ROOT__', dirname(__FILE__)); 
require_once(__ROOT__.'/../ScenarioClass.php'); 

use PHPUnit\Framework\TestCase;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-02-02 at 10:31:27.
 */
class ScenarioTest extends TestCase {

    public $scenario;
    /**
     * @var Scenario
     */

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $myObj = new stdClass();
        $myObj->a="hello";
        $myJSON = json_encode($myObj);
        $a=json_decode($myJSON);
        $e = new stdClass();
        $e->data = new StdClass();
        $e->data->z="hello";
        $e->data->b = new StdClass();
        $e->data->b->c="bbb";
        $sc = new qtype_coderunner_scenario(json_encode($e));
        
        
        array_push($sc->requires,"a.b");
        
        $this->scenario = $sc;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    public function testGenericTest(){
        $stack = [];
        $this->assertEquals(0, count($stack));
        array_push($stack, 'foo');
        $this->assertEquals('foo', $stack[count($stack)-1]);
        $this->assertEquals(1, count($stack));
        $this->assertEquals('foo', array_pop($stack));
        $this->assertEquals(0, count($stack));
    }

    /**
     * @covers Scenario::get_json_encoded
     * @todo   Implement testGet_json_encoded().
     */
    public function testGet_json_encoded() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        

        $json=$this->scenario->get_json_encoded();
        $this->assertEquals('{"data":{"z":"hello","b":{"c":"bbb"}},"provides":[],"requires":["a.b"],"err_message":null}', $json);
        
    }

    /**
     * @covers Scenario::get_data
     * @todo   Implement testGet_data().
     */
    public function testGet_data() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $data=$this->scenario->data;
        $this->assertEquals('hello',$data->z);
    }

    /**
     * @covers Scenario::can_provide_data_from_scenario
     * @todo   Implement testCan_provide_data_from_scenario().
     */
    public function testCan_provide_data_from_given_scenario() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $pov=$this->scenario->can_provide_data_from_scenario($this->scenario);
        $this->assertFalse($pov,'grr 1');
        $this->scenario->set_data_for_variable("a.b", "hello");
        $pov=$this->scenario->can_provide_data_from_scenario($this->scenario);
        //var_dump($this->scenario);
        $this->assertTrue($pov,'grr 2');
    }

    /**
     * @covers Scenario::data_contains_variable
     * @todo   Implement testData_contains_variable().
     */
    public function testData_contains_variable() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $this->assertTrue($this->scenario->data_contains_variable($this->scenario->data, 'z'),'grr 3');
    }

    /**
     * @covers Scenario::get_data_for_variable
     * @todo   Implement testGet_data_for_variable().
     */
    public function testGet_data_for_variable() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $v=$this->scenario->get_data_for_variable('z');
        $this->assertEquals('hello', $v);
    }

    /**
     * @covers Scenario::set_data_for_variable
     * @todo   Implement testSet_data_for_variable().
     */
    public function testSet_data_for_variable() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $d=$this->scenario->set_data_for_variable('d.d', 'hurrah');
        $v=$this->scenario->get_data_for_variable('d.d');
        $this->assertEquals('hurrah', $v);
    }

    /**
     * @covers Scenario::addObject
     * @todo   Implement testAddObject().
     */
    public function testAddObject() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        $sc=new stdClass();
        $sc->username='comqdhb';
        $this->scenario->addObject($sc, 'STUDENT');
        $un=$this->scenario->get_data_for_variable('STUDENT.username');
        $this->assertEquals('comqdhb',$un);
    }

}
